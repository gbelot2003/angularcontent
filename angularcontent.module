<?php

/***
* implement of hook_menu
*
***/
function angularcontent_menu(){
	$items['angular'] = array(
		'page callback' => 'all_angular_page',
		'access arguments' => array('access content')
	);

	$items['json/custom-api/content'] = array(
		'page callback' => 'content_json_endpoint_page',
		'delivery callback' => 'drupal_json_output',
		'access arguments' => array('access content')
	);

	return $items;
};


function angularcontent_theme(){
	return array(
		'all_angular' => array(
			'template' => 'all-angular',
		),
	);
}

/**
*
* All Content callbacks
*
**/

function all_angular_page(){

	drupal_add_library('angularjs', 'angularjs');

	$path = drupal_get_path('module', 'angularcontent');
	
	drupal_add_js($path . '/js/content.gen.js');

	return theme('all_angular');
}


/**
*
* Page Callback
*
**/

function content_json_endpoint_page(){
	// Vamos a imprimir el header 
	header('Content-type: application/json');

	// Print Json a la pantalla

	print json_encode(get_all_content_json_array());
	// Finalizamos para que no se renderice el resto del theme API y nos quedamos con el formato JSON
	exit;
}

/**
*
* Arreglemos contenido como un array de JSON
*
**/

function get_all_content_json_array() {
  $contenido = array();

  // Fetch the page & items_per_page parameters
  $page = $_GET['page'];
  $items_per_page = $_GET['items_per_page'];

  // Calculate the offset position within the result set. This is where the
  // 'slice' of results for the current page will be calculated from.
  $offset = ($page - 1) * $items_per_page;

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'alimentos')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->range($offset, $items_per_page);

  // Fetch the cats
  $result = $query->execute();

  $json_contenido = array();

  if (isset($result['node'])) {
    // We also need the total number of *all* cats for pagination. We only
    // retrieve this if we have queried a non-empty result set.
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'alimentos')
      ->propertyCondition('status', 1)
      ->count();

    $count = $query->execute();

    $content_nids = array_keys($result['node']);
    $contenido = entity_load('node', $content_nids);
    $total = 1;
    foreach ($contenido as $contenidos) {
      // We use Entity API's entity_metadata_wrapper.
      $content_wrapper = entity_metadata_wrapper('node', $contenidos);

      $body = $content_wrapper->body->value();
      $image = $content_wrapper->field_imagenes->value();
      

      $json_contenido['nodes'][] = array(
        'node' => array(
          'title' => $contenidos->title,
          'Body' => $body['value'],
          'Image' => image_style_url('front-images', $image['uri']),
          'path' => $content_nids
         ),
      );
      $total++;
    }

    // Set the $cats[total] value with the total number of cats from the entire
    // result set.
    $json_contenido['total'] = $count;
  }

  return $json_contenido;

//  return print_r($result);
}